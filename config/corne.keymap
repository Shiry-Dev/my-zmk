/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38 8>;
        };

        hmlw: hmlw {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <350>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38 8>;
        };

        hmrw: hmrw {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <350>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q             &kp W             &kp E         &kp R         &kp T          &kp Y    &kp U            &kp I         &kp O             &kp P     &none
&none  &hmlw LEFT_GUI A  &hmlw LEFT_ALT S  &hml LCTRL D  &hml LSHFT F  &kp G          &kp H    &hmr RSHFT J     &hmr RCTRL K  &hmrw LEFT_ALT L  &kp SEMI  &none
&none  &kp Z             &kp X             &kp C         &kp V         &kp B          &kp N    &kp M            &kp COMMA     &kp DOT           &kp FSLH  &none
                                           &lt 4 LALT    &lt 2 TAB     &lt 1 SPACE    &kp RET  &lt 2 BACKSPACE  &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none  &none   &kp ESC   &none   &none        &none     &kp PAGE_DOWN  &kp PG_UP  &none      &none   &trans
&trans  &none  &none   &none     &none   &none        &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans  &trans
&trans  &none  &trans  &trans    &trans  &trans       &trans    &kp HOME       &kp END    &trans     &trans  &trans
                       &kp LGUI  &trans  &kp SPACE    &kp RET   &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH          &kp DLLR           &kp PRCNT    &kp CARET  &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK  &trans
&trans  &none     &none   &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &trans       &kp MINUS  &kp EQUAL  &kp LBKT              &kp RBKT               &kp BSLH      &trans
&trans  &kp CAPS  &trans  &kp TILDE         &kp GRAVE          &trans       &kp UNDER  &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE      &trans
                          &kp LGUI          &trans             &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &none         &none         &bt BT_CLR    &none         &bootloader     &bootloader  &kp C_BRI_DEC      &kp C_BRI_UP     &none   &none   &trans
&none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none   &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans       &trans             &trans           &trans  &trans  &trans
                                    &kp LGUI      &trans        &kp SPACE       &kp RET      &trans             &tog 0
            >;
        };

        layer_4 {
            bindings = <
&trans  &none   &none   &none     &none   &none        &kp ASTERISK  &kp N7        &kp N8        &kp N9        &kp PLUS   &trans
&trans  &trans  &trans  &trans    &trans  &trans       &kp EQUAL     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0     &trans
&trans  &trans  &trans  &trans    &trans  &trans       &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS  &trans
                        &kp LGUI  &trans  &kp SPACE    &kp RET       &trans        &kp RALT
            >;
        };
    };
};
